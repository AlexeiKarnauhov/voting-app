document.addEventListener('DOMContentLoaded', () => {
  let currentRound = 0;
  
  const answers = ['–ë–æ—Ä–æ–¥–∫–æ –û–ª–µ–≥', '–°–∞–≤—á–µ–Ω–∫–æ –ê–Ω–¥—Ä–µ–π', '–î–µ–º–∏–¥–µ–Ω–∫–æ –ï–ª–µ–Ω–∞', '–ú–∏—Ö–∞–π–ª–æ–≤–∞ –ù–∞—Ç–∞–ª—å—è', '–ü–æ–¥–æ–ª—å—Å–∫–∏–π –î–º–∏—Ç—Ä–∏–π', '–ï–ª–∏—Å–µ–µ–≤ –ï–≤–≥–µ–Ω–∏–π', '–õ–∏–ø–∞—Ç–æ–≤–∞ –ï–ª–µ–Ω–∞'];
  const rounds = answers.length;

  const startScreen = document.getElementById('start-screen');
  const app = document.getElementById('app');
  const voteSection = document.getElementById('vote-section');
  const resultSection = document.getElementById('result-section');
  const loadingScreen = document.getElementById('loading-screen');
  const voteOptions = document.getElementById('vote-options');
  const countdownElement = document.getElementById('countdown');
  const internalColumn = document.getElementById('internal-column');
  const externalColumn = document.getElementById('external-column');
  const columns = document.querySelectorAll('.column');

  const nameInput = document.getElementById('username');
  const userResults = [];

  const socket = io(); // –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É socket.io

  // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ localStorage
  const storedName = localStorage.getItem('username');
  
  socket.on('vote_result', (data) => {
    console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', data);
    const { correctAnswer, yourAnswer, isCorrect, firstCorrectUser } = data;

    console.log('firstCorrectUser from server:', firstCorrectUser);
    console.log('local username:', localStorage.getItem('username'));

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞
    userResults.push({
      round: currentRound + 1,
      yourAnswer,
      correctAnswer,
      isCorrect
    });
  
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É
    const imageName = correctAnswer + '.jpg';
    //const backgroundImage = document.getElementById('backgroundImage');
    //backgroundImage.src = imageName;
    //backgroundImage.alt = correctAnswer;
    document.querySelector('.photo-container').classList.add('visible');
  
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    document.getElementById('result-message').innerHTML = `
      –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: ${correctAnswer}.<br>
      –í–∞—à –≤—ã–±–æ—Ä: ${yourAnswer || '–Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞'}.<br>
      ${isCorrect ? '‚úÖ –í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –≤–µ—Ä–Ω–æ!' : '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç.'}<br>
      ${firstCorrectUser ? `üëë –ü–µ—Ä–≤—ã–π –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏–≤—à–∏–π: ${firstCorrectUser}` : ''}
    `;

    document.getElementById('restart-button').classList.remove('hidden');

    resultSection.classList.remove('hidden');

    // –í—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –ø–µ—Ä–≤—ã–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏–≤—à–∏–º
    if (firstCorrectUser === localStorage.getItem('username')) {
      const popup = document.createElement('div');
      popup.textContent = 'üéâ –í—ã –ø–µ—Ä–≤—ã–π –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏–≤—à–∏–π!';
      popup.style.position = 'fixed';
      popup.style.top = '20px';
      popup.style.left = '50%';
      popup.style.transform = 'translateX(-50%)';
      popup.style.background = 'green';
      popup.style.color = 'white';
      popup.style.padding = '12px 20px';
      popup.style.borderRadius = '8px';
      popup.style.boxShadow = '0 2px 6px rgba(0,0,0,0.2)';
      popup.style.zIndex = '1000';
      document.body.appendChild(popup);

      setTimeout(() => {
        popup.remove();
      }, 3000);
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è "–û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å"
    const restartBtn = document.getElementById('restart-button');
    restartBtn.onclick = () => {
      resultSection.classList.add('hidden');
      document.querySelector('.photo-container').classList.remove('visible');
      //backgroundImage.src = '';
    
      loadingScreen.classList.remove('hidden');
      columns.forEach(el => el.classList.add('blur'));
    
      currentRound++;
    
      if (currentRound >= rounds) {
        showFinalResults();
        return;
      }
    
      setTimeout(() => {
        // reset –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏ –ø–µ—Ä–µ—Ö–æ–¥–∞
        const nextCorrectAnswer = answers[currentRound % rounds];
        fetch(`/reset?answer=${encodeURIComponent(nextCorrectAnswer)}`);
    
        loadingScreen.classList.add('hidden');
        columns.forEach(el => el.classList.remove('blur'));
        loadData();
        setTimeout(displayVotingOptions, 2000);
      }, 5000);
    };    
  });  
  
  // –î–∞–Ω–Ω—ã–µ –ø–æ —Ä–∞—É–Ω–¥–∞–º
  const internalRounds = [
    ['–ö–ª–∏–µ–Ω—Ç—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', '–°–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è', '–ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π', '–í–æ–≤–ª–µ—á—ë–Ω–Ω–æ—Å—Ç—å', '–û–±—Ä–∞—â–µ–Ω–∏—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É'],
    ['–ü—Ä–æ–¥—É–∫—Ç–æ–≤—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å', '–°–∫–æ—Ä–∏–Ω–≥', '–õ–æ—è–ª—å–Ω–æ—Å—Ç—å', '–ü—Ä–æ—Ñ–∏–ª—å –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è', '–ò—Å—Ç–æ—Ä–∏—è –∑–∞–π–º–æ–≤'],
    ['–§–∏–Ω–∞–Ω—Å–æ–≤–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ', '–°–∫–æ—Ä–æ—Å—Ç—å –æ—Ç–∫–ª–∏–∫–∞', '–ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–π', '–¶–µ–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è', '–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–æ–Ω–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞'],
    ['–í—Ä–µ–º—è –æ–±—Ä–∞—â–µ–Ω–∏–π', '–†–µ–∞–∫—Ü–∏–∏ –Ω–∞ –æ—Ñ—Ñ–µ—Ä—ã', '–ü–æ–≤–µ–¥–µ–Ω–∏–µ –≤ –º–æ–±–∏–ª—å–Ω–æ–º –±–∞–Ω–∫–µ', '–ò—Å—Ç–æ—Ä–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π', '–ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è']
  ];

  const externalRounds = [
    ['–û—Ç–∫—Ä—ã—Ç—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏', '–ü–ª–∞—Ç—ë–∂–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã', '–ü–∞—Ä—Ç–Ω—ë—Ä—ã', '–î–µ–º–æ–≥—Ä–∞—Ñ–∏—è', '–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è'],
    ['–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏', '–ö–∞—Ç–∞–ª–æ–≥–∏ –∫–æ–º–ø–∞–Ω–∏–π', '–ú–§–û –∏ –±—é—Ä–æ –∫—Ä–µ–¥–∏—Ç–æ–≤', '–î–∞–Ω–Ω—ã–µ —Å –≥–æ—Å–ø–æ—Ä—Ç–∞–ª–æ–≤', '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã'],
    ['–¢–æ—Ä–≥–æ–≤—ã–µ —Å–µ—Ç–∏', '–¢—Ä–µ—Ç—å–∏ –ª–∏—Ü–∞', '–î–∞–Ω–Ω—ã–µ —Å—Ç—Ä–∞—Ö–æ–≤—ã—Ö', '–û—Ç–∫—Ä—ã—Ç—ã–µ API', '–†–µ–∫–ª–∞–º–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã'],
    ['–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ —á–µ–∫–∏', '–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç—á—ë—Ç—ã', '–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–µ –ø–∞—Ä—Ç–Ω—ë—Ä—ã', '–ú–æ–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è', '–î–∞–Ω–Ω—ã–µ —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤']
  ];

  // –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  app.classList.add('hidden');
  voteSection.classList.add('hidden');
  resultSection.classList.add('hidden');
  loadingScreen.classList.add('hidden');
  columns.forEach(el => el.classList.remove('blur'));

  document.getElementById('start-button').onclick = () => {
    const username = nameInput.value.trim();
    if (!username) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∏–º—è.');
      return;
    }
    localStorage.setItem('username', username);
    socket.emit('register', username);

    startScreen.style.display = 'none';
    app.classList.remove('hidden');
    columns.forEach(el => el.classList.remove('blur'));
    loadingScreen.classList.add('hidden');

    correctAnswer = answers[currentRound]; // –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –°–ï–†–í–ï–†–ê
    fetch(`/reset?answer=${encodeURIComponent(correctAnswer)}`);

    loadData();
    setTimeout(displayVotingOptions, 2000);
  };

  function loadData() {
    const internalData = internalRounds[currentRound % internalRounds.length];
    const externalData = externalRounds[currentRound % externalRounds.length];

    internalColumn.innerHTML = `<h2>–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ</h2>` +
      internalData.map(text => `<div class=\"block\">${text}</div>`).join('');
    externalColumn.innerHTML = `<h2>–í–Ω–µ—à–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ</h2>` +
      externalData.map(text => `<div class=\"block\">${text}</div>`).join('');
  }

  function displayVotingOptions() {
    voteSection.classList.remove('hidden');
    voteOptions.innerHTML = '';
    answers.forEach(answer => {
      const btn = document.createElement('button');
      btn.classList.add('vote-button');
      btn.textContent = answer;
      btn.onclick = () => finishVoting(answer);
      voteOptions.appendChild(btn);
    });
    startCountdown(20);
  }

  let voteTimer = null; // –≥–ª–æ–±–∞–ª—å–Ω–æ

  function startCountdown(seconds) {
    if (voteTimer) {
      clearInterval(voteTimer); // –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π —Å–±—Ä–æ—Å
    }
  
    let timeLeft = seconds;
    countdownElement.textContent = timeLeft;
  
    voteTimer = setInterval(() => {
      timeLeft--;
      countdownElement.textContent = timeLeft;
  
      if (timeLeft <= 0) {
        clearInterval(voteTimer);
        voteTimer = null;
        finishVoting(null);
      }
    }, 1000);
  }

  function finishVoting(selectedAnswer) {
    if (voteTimer) {
      clearInterval(voteTimer);
      voteTimer = null;
    }
    voteSection.classList.add('hidden');
    const correctAnswer = answers[currentRound % answers.length];
    socket.emit('vote', selectedAnswer);
    const imageName = correctAnswer + '.jpg';
    const backgroundImage = document.getElementById('background-image');
    backgroundImage.src = imageName;
    backgroundImage.alt = correctAnswer;
    document.querySelector('.photo-container').classList.add('visible');


    resultSection.innerHTML = `<div id=\"result-message\">–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: ${correctAnswer}. –í–∞—à –≤—ã–±–æ—Ä: ${selectedAnswer || '–Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞'}.</div>`;
    const restartBtn = document.createElement('button');
    restartBtn.textContent = '–û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å';
    restartBtn.id = 'restart-button';
    restartBtn.onclick = () => {
      resultSection.classList.add('hidden');
      document.querySelector('.photo-container').classList.remove('visible');
      backgroundImage.src = '';
    
      loadingScreen.classList.remove('hidden');
      columns.forEach(el => el.classList.add('blur'));
    
      // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ä–∞—É–Ω–¥–∞ (–≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è –î–û –∏–∑–º–µ–Ω–µ–Ω–∏—è currentRound)
      const nextCorrectAnswer = answers[(currentRound + 1) % rounds];
    
      setTimeout(() => {
        currentRound++;

        if (currentRound >= rounds) {
          showFinalResults();
          return;
        }

        // ‚è± –ü–µ—Ä–µ–Ω–æ—Å–∏–º reset —Å—Ç—Ä–æ–≥–æ –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –∑–∞–≤–µ—Ä—à–∏–ª–∏ —Ç–µ–∫—É—â–∏–π —Ä–∞—É–Ω–¥
        setTimeout(() => {
          const nextCorrectAnswer = answers[currentRound % rounds];
          fetch(`/reset?answer=${encodeURIComponent(nextCorrectAnswer)}`);
        }, 100); // –æ—á–µ–Ω—å –∫–æ—Ä–æ—Ç–∫–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, –Ω–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –≥–æ–ª–æ—Å —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω

        loadingScreen.classList.add('hidden');
        columns.forEach(el => el.classList.remove('blur'));
        loadData();
        setTimeout(displayVotingOptions, 2000);

      }, 5000);
      
    };
    
    resultSection.appendChild(restartBtn);
    resultSection.classList.remove('hidden');
  }
  function showFinalResults() {
    app.classList.add('hidden');
  
    const final = document.createElement('div');
    final.id = 'final-screen';
    final.innerHTML = `<h2>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –¥–ª—è ${localStorage.getItem('username')}</h2>`;
  
    const list = document.createElement('ul');
    userResults.forEach((res) => {
      const item = document.createElement('li');
      item.innerHTML = `–†–∞—É–Ω–¥ ${res.round}: 
        –í–∞—à –æ—Ç–≤–µ—Ç ‚Äî <b>${res.yourAnswer || '–Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞'}</b>, 
        –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π ‚Äî <b>${res.correctAnswer}</b> 
        ${res.isCorrect ? '‚úÖ' : '‚ùå'}`;
      list.appendChild(item);
    });
  
    const thanks = document.createElement('p');
    thanks.textContent = '–°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ! –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à—ë–Ω.';
  
    final.appendChild(list);
    final.appendChild(thanks);
    document.body.appendChild(final);
  }  
});
