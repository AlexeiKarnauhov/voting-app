// –ù–∞–≥—Ä—É–∑–æ—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: —Å–∏–º—É–ª—è—Ü–∏—è 50 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –ø–æ–¥–∫–ª—é—á–∞—é—â–∏—Ö—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É —á–µ—Ä–µ–∑ socket.io

const io = require('socket.io-client');
const TOTAL_USERS = 1000;
const ROUNDS = 7;
const SERVER_URL = 'https://voting-app-s5dv.onrender.com';
const ANSWERS = [
  '–ë–æ—Ä–æ–¥–∫–æ –û–ª–µ–≥',
  '–°–∞–≤—á–µ–Ω–∫–æ –ê–Ω–¥—Ä–µ–π',
  '–î–µ–º–∏–¥–µ–Ω–∫–æ –ï–ª–µ–Ω–∞',
  '–ú–∏—Ö–∞–π–ª–æ–≤–∞ –ù–∞—Ç–∞–ª—å—è',
  '–ï–ª–∏—Å–µ–µ–≤ –ï–≤–≥–µ–Ω–∏–π',
  '–ü–æ–¥–æ–ª—å—Å–∫–∏–π –î–º–∏—Ç—Ä–∏–π',
  '–õ–∏–ø–∞—Ç–æ–≤–∞ –ï–ª–µ–Ω–∞'
];

for (let i = 0; i < TOTAL_USERS; i++) {
  const socket = io(SERVER_URL);
  const userName = `User-${i + 1}`;

  socket.on('connect', () => {
    socket.emit('register', userName);

    let round = 0;

    const voteInNextRound = () => {
      if (round >= ROUNDS) {
        socket.disconnect();
        return;
      }

      const delay = Math.floor(Math.random() * 4000) + 1000;
      setTimeout(() => {
        const answer = ANSWERS[Math.floor(Math.random() * ANSWERS.length)];
        console.log(`${userName} (–†–∞—É–Ω–¥ ${round + 1}) –≥–æ–ª–æ—Å—É–µ—Ç –∑–∞ ${answer}`);
        socket.emit('vote', answer);
        round++;
        voteInNextRound();
      }, delay);
    };

    voteInNextRound();

    socket.on('vote_result', (data) => {
      console.log(`${userName}: —Ä–µ–∑—É–ª—å—Ç–∞—Ç ‚Äî ${data.isCorrect ? '‚úÖ' : '‚ùå'}${data.isFirstCorrect ? ' üëë' : ''}`);
    });
  });

  socket.on('connect_error', (err) => {
    console.error(`${userName} ‚Äî –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:`, err.message);
  });
}
